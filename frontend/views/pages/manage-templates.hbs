{{#> template}}
  {{#*inline "content"}}
    <main role="main">
        <div class="container">
            <h1>Manage Templates</h1>
            <hr />

            <fieldset class="form-group collapsible">
                <legend style="cursor: pointer" class='togvis sectionTitle'><i class="fa fa-plus"></i>  <span id="reportTitle"></span></legend>
                <div class="contents" style="display: none;">
                    <hr />
                    <div class="form-row">
                        <div>
                            <table id="documentTable">
                                <thead>
                                    <th style="min-width:50px">Doc No.</th>
                                    <th style="min-width: 400px">Template Name</th>
                                    <th style="min-width: 120px">Uploaded Date</th>
                                    <th style="">Active</th>
                                    <th></th> <!-- view -->
                                    <th></th> <!-- remove -->
                                    <th></th> <!-- id -->
                                </thead>
                                <tbody id="documentTableBody"></tbody>
                            </table>
                        </div>
                    </div>
                    <form class="upload">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#uploadModal">Upload New Version</button>
                            </div>
                        </div>
                    </form>
                </div>
            </fieldset>
            <fieldset class="form-group collapsible nofr-section">
                <legend style="cursor: pointer" class='togvis sectionTitle'><i class="fa fa-plus"></i>  Manage NFR Provisions</legend>
                <div class="contents" style="display: none;">
                    <hr />
                    <div class="form-row">
                        <div>
                            <table id="provisionTable">
                                <thead>
                                    <th>Type</th>
                                    <th>Group</th>
                                    <th>Max</th>
                                    <th style="min-width: 300px">Provision</th>
                                    <th style="min-width: 150px">Free Text</th>
                                    <th style="min-width: 150px">Category</th>
                                    <th>Active</th><!-- Active column -->
                                    <th></th><!-- Edit column -->
                                    <th></th><!-- id column -->
                                    <th></th><!-- dtid column -->
                                </thead>
                                <tbody id="provisionTableBody">
                                    <tr>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="V" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="1" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="" readonly></td>
                                        <td><input type="text" style="color:gray;width: 100%" value="TEMPLATE VARIABLES - NOFR" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 200px" value="" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 200px" value="" readonly></td>
                                        <td><input type="radio" checked></td></td>
                                        <td><u>Edit</u></td>
                                    </tr>
                                    <tr>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="V" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="2" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="" readonly></td>
                                        <td><input type="text" style="color:gray;width: 100%" value="FEES" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 200px" value="" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 200px" value="" readonly></td>
                                        <td><input type="radio"></td></td>
                                        <td><u>Edit</u></td>
                                    </tr>
                                    <tr>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="O" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="5" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 50px" value="3" readonly></td>
                                        <td><input type="text" style="color:gray;width: 100%" value="REPLACEMENT STATEMENT" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 200px" value="" readonly></td>
                                        <td><input type="text" style="color:gray;max-width: 200px" value="OFFER PRE" readonly></td>
                                        <td><input type="radio"></td></td>
                                        <td><u>Edit</u></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <form class="provision">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <button type="button" class="btn btn-success">Add a Provision</button>
                            </div>
                        </div>
                    </form>
                </div>
            </fieldset>
            <fieldset class="form-group collapsible nofr-section">
                <legend style="cursor: pointer" class='togvis sectionTitle'><i class="fa fa-plus"></i>  Manage NFR Variables</legend>
                <div class="contents" style="display: none;">
                    <hr />
                    <div class="form-row">
                        <div>
                            <table id="variableTable">
                                <thead>
                                    <th style="width: 500px">Variable</th>
                                    <th></th><!-- Edit column -->
                                </thead>
                                <tbody id="variableTableBody">
                                    <tr>
                                        <td><input type="text" style="color:gray; min-width: 100%" value="TEMPLATE VARIABLES - NOFR" readonly></td>
                                        <td><u>Edit</u></td>
                                    </tr>
                                    <tr>
                                        <td><input type="text" style="color:gray; min-width: 100%" value="FEES" readonly></td>
                                        <td><u>Edit</u></td>
                                    </tr>
                                    <tr>
                                        <td><input type="text" style="color:gray; min-width: 100%" value="REPLACEMENT STATEMENT" readonly></td>
                                        <td><u>Edit</u></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <form class="variable">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <button type="button" class="btn btn-success">Add a Variable</button>
                            </div>
                        </div>
                    </form>
                </div>
            </fieldset>
        </div>
        <div id="uploadModal" class="modal fade" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                <div class="modal-header">
                    <h4 id="uploadTitle" class="modal-title">Upload New Version</h4>
                    <h4 id="confirmTitle" class="modal-title" style="display:none">Confirm Upload</h4>
                </div>
                <div class="modal-body">
                     <form class="upload">
                        <div id="uploadBody">
                            <div class="form-group row">
                                <div class="col-md-12">
                                    <input class="form-control-file" id="uploadFile" style="height: auto" type="file" accept=".docx">
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-12">
                                    <label for="uploadTemplateName" style="font-weight:bold">Template Name:</label>
                                    <input id="uploadTemplateName" type="text" class="border border-1 rounded pl-2 ml-2" style="min-width:400px" disabled>
                                </div>
                            </div>
                        </div>
                        <div id="confirmBody" style="display:none">
                            <p>Are you sure you would like to upload this template?</p>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="saveButton" class="btn btn-primary" onclick="saveButtonClicked()" disabled>Save</button>
                    <button type="button" id="cancelButton" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" id="yesButton" class="btn btn-primary" onclick="uploadTemplate()" style="display:none">Yes</button>
                    <button type="button" id="noButton" class="btn btn-secondary" data-dismiss="modal" style="display:none">No</button>
                </div>
                </div>
            </div>
        </div>
        <div id="removeModal" class="modal fade" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                <div class="modal-header">
                    <h4 id="removeTitle" class="modal-title">Remove Template</h4>
                </div>
                <div class="modal-body">
                    <div>
                        <p>Are you sure you would like to remove this template?</p>
                    </div>
                    <input id="document-template-id" style="display:none" value=""></input>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick='removeTemplate()'>Yes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="editProvisionModal" tabindex="-1" role="dialog" aria-labelledby="editProvisionModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editProvisionModalLabel">Edit Provision</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="editProvisionForm">
                        <div class="form-group">
                            <label for="editProvisionType">Type</label>
                            <select class="form-control" id="editProvisionType" name="type">
                                <option value="O">O</option>
                                <option value="V">V</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="editProvisionGroup">Group</label>
                            <select class="form-control" id="editProvisionGroup" name="provisionGroup">
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="editProvisionMax">Max</label>
                            <input type="number" class="form-control" id="editProvisionMax" name="max">
                        </div>
                        <div class="form-group">
                            <label for="editProvisionText">Provision</label>
                            <input type="text" class="form-control" id="editProvisionText" name="provision">
                        </div>
                        <div class="form-group">
                            <label for="editProvisionFreeText">Free Text</label>
                            <input type="text" class="form-control" id="editProvisionFreeText" name="freeText">
                        </div>
                        <div class="form-group">
                            <label for="editProvisionCategory">Category</label>
                            <input type="text" class="form-control" id="editProvisionCategory" name="type">
                        </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveProvisionBtn" onclick="updateProvision()">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <script>
        var dataArray = [];
        $( document ).ready(function() {
            const urlParams = new URLSearchParams(window.location.search);
            const reportIndex = parseInt(urlParams.get('report'));
            if (reportIndex != 2) {
                $(".nofr-section").hide();
            }
            const reportType = reportIndex == 1 ? "Land Use Report" : reportIndex == 2 ? "Notice of Final Review" : "";
            $("#reportTitle").text(reportType);

            $('input[type=radio]').click(function(){
                const templateId = this.id.replace("radio-", "");
                const reportType = $("#reportTitle").text();
                fetch(`/admin/activate-template/${templateId}/${encodeURIComponent(reportType)}`, {
                    method: 'GET',
                    responseType: 'application/json',
                    })
                .then(res => res.json())
                .then(data => {
                    if (data.errors) {
                        alert(data.errors);
                    }
                })
                .catch(() => location.reload());
            });
            // used for sorting the radio buttons
            $.fn.dataTable.ext.order['dom-checkbox'] = function  ( settings, col )
                {
                    return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
                        return $('input', td).prop('checked') ? '1' : '0';
                    } );
                }
            $('#documentTable').DataTable({
                "ajax": {
                    "url": `admin/get-templates/${encodeURIComponent(reportType)}`,
                    "dataSrc": ""
                },
                "paging": true,
                "bFilter": true,
                "columns": [
                    { data: "template_version"},
                    { data: "file_name"},
                    { data: "update_timestamp"},
                    { data: "active_flag"},
                    { data: "view"},
                    { data: "remove"},
                    { data: "id"}
                ],
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6],
                        "render": function (data, type, row, meta) {
                        if (type === 'display') {
                            var columnTypes = ["template_version", "file_name", "update_timestamp", "active_flag", "view", "remove", "id"];
                            var columnType = columnTypes[meta.col];
                            var id = row["id"];
                            const checked = meta.row === 0 ? 'checked' : '';

                            if (columnType === "active_flag") {
                                return `<input type='radio' id='active-${id}' data-id='${id}' name='radioActive' ${checked}>`;
                            } else if (columnType === "remove") {
                                return `<button class='btn btn-warning remove-template-button' data-id='${id}' data-toggle='modal' data-target='#removeModal'>Remove`;
                            } else if (columnType === "view") {
                                return `<button class='btn btn-info' id='view-${id}' onclick='downloadTemplate(${id})'>View`;
                            } else if (columnType === "id") {
                                return `<input type='hidden' id='template_id-${id}' value='${data}' />`;
                            } else {
                                return `<input type='text' id='${columnType}-${id}' value='${data}' readonly style='color: gray; width: 100%;' />`;
                            }
                        } else {
                            return data;
                        }
                        }
                    },
                    {
                        "targets": [3],
                        "className": 'text-center'
                    },
                    {
                        "targets": [4, 5, 6],
                        "orderable": false,
                        "searchable": false,
                    },
                ],
                "createdRow": function (row, data, dataIndex) {
                    $(row).attr("id", "row-" + data["id"]);
                },
                "order": [
                    [0, "asc"]
                ]
            });
            if (reportIndex == 2) {
                $('#provisionTable').DataTable({
                    "ajax": {
                        "url": 'admin/nfr-provisions',
                        "dataSrc": ""
                    }, 
                    "paging": false,
                    "bFilter": false,
                    "columns": [
                        {data: "type"},
                        {data: "provision_group"},
                        {data: "max"},
                        {data: "provision"},
                        {data: "free_text"},
                        {data: "category"},
                        {data: "active_flag"},
                        {data: "edit"},
                        {data: "id"},
                        {data: "dtid"},
                    ],
                    "columnDefs": [
                    {
                        targets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
                        render: function (data, type, row, meta) {
                            if (type === 'display') {
                                var columnTypes = ["type", "provision_group", "max", "provision", "free_text", "category", "active_flag", "edit", "id", "dtid", ];
                                var columnType = columnTypes[meta.col];
                                var id = row["id"];
                                var group = row["provision_group"];
                                var max = row["max"];

                                if (columnType === "active_flag") {
                                    const checked = data === true ? 'checked' : '';
                                    return `<input type='checkbox' id='active-${id}' data-id='${id}' data-group='${group}' data-max='${max}' name='radioActive' ${checked}>`;
                                } else if (columnType === "id" || columnType === "dtid") {
                                    return `<input type='hidden' id='${columnType}-${id}' value='${data}' />`;
                                } else if (columnType === "edit") {
                                    return `<a href="#" data-id="${id}">Edit</a>`
                                } else {
                                    return `<input type='text' id='${columnType}-${id}' value='${data}' readonly style='color: gray; width: 100%;' />`;
                                }
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        targets: [6],
                        className: 'text-center',
                        orderDataType: 'dom-checkbox'
                    },
                    {
                        targets: [7, 8, 9],
                        orderable: false
                    }],
                    "drawCallback": function (settings) {
                        // add event listeners to the provision checkboxes
                        const checkboxes = document.querySelectorAll('input[type="checkbox"]');
                        if (checkboxes.length > 0) {
                            checkboxes.forEach(checkbox => {
                                checkbox.addEventListener('click', function() {
                                    const group = checkbox.dataset.group;
                                    const max = checkbox.dataset.max;
                                    const active = document.querySelectorAll(`input[type="checkbox"][data-group="${group}"]:checked`).length;
                                    if (active >= max) {
                                        document.querySelectorAll(`input[type="checkbox"][data-group="${group}"]:not(:checked)`).forEach(checkbox => {
                                            checkbox.disabled = true;
                                        });
                                    } else {
                                        document.querySelectorAll(`input[type="checkbox"][data-group="${group}"]:not(:checked)`).forEach(checkbox => {
                                            checkbox.disabled = false;
                                        });
                                    }
                                    
                                    if (checkbox.checked) {
                                        fetch(`admin/enable-provision/${checkbox.dataset.id}`);
                                    } else {
                                        fetch(`admin/disable-provision/${checkbox.dataset.id}`);
                                    }
                                });
                                const g = checkbox.dataset.group;
                                const m = checkbox.dataset.max;
                                const a = document.querySelectorAll(`input[type="checkbox"][data-group="${g}"]:checked`).length;
                                if (a >= m) {
                                    document.querySelectorAll(`input[type="checkbox"][data-group="${g}"]:not(:checked)`).forEach(checkbox => {
                                        checkbox.disabled = true;
                                    });
                                }
                            });
                        }
                    }
                });
                $('#variableTable').DataTable({
                    "paging": false,
                    "bFilter": false,
                    "columnDefs": [
                    {
                        targets: 0,
                        type: 'string',
                        render: function(data, type, full, meta) {
                            if (type === 'filter' || type === 'sort') {
                                var api = new $.fn.dataTable.Api(meta.settings);
                                var td = api.cell({row: meta.row, column: meta.col}).node();
                                data = $('select, input[type="text"]', td).val();
                            }
                            return data;
                        }
                    },
                    {
                        targets: 1,
                        orderable: false
                    }],
                });
            }

        });
        $(document).on("click", ".remove-template-button", function () {
            const documentTemplateId = $(this).data('id');
            $(".modal-body #document-template-id").val(documentTemplateId);
        });
    </script>
    <script>
        let fileBase64;
        const streamToText = async (blob) => {
            const readableStream = await blob.getReader();
            const chunk = await readableStream.read();

            return new TextDecoder('utf-8').decode(chunk.value);
        };

        const bufferToText = (buffer) => {
            const bufferByteLength = buffer.byteLength;
            const bufferUint8Array = new Uint8Array(buffer, 0, bufferByteLength);

            return new TextDecoder().decode(bufferUint8Array);
        };

        document.getElementById('uploadFile').addEventListener('change', function(e) {
            $('#saveButton').prop('disabled', false);
            $('#uploadTemplateName').prop('disabled', false);
            let file = document.getElementById('uploadFile').files[0];
            if (file.name) {
                $('#uploadTemplateName').val(file.name.replace('.docx',''));
            }

            (async () => {
                const fileContent = await file.text();
                const fileContentStream = await file.stream();
                const buffer = await file.arrayBuffer();
                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function () {
                    fileBase64 = reader.result.split('base64,')[1];
                };
                reader.onerror = function (error) {
                    console.log("Error: ", error);
                };
            })();
        });

        $('#uploadModal').on('hidden.bs.modal', function (e) {
            $('#confirmTitle').hide();
            $('#uploadTitle').show();
            $('#confirmBody').hide();
            $('#uploadBody').show();
            $('#yesButton').hide();
            $('#noButton').hide();
            $('#saveButton').show();
            $('#cancelButton').show();
            var input = document.querySelector('input[type="file"]');
            input.value = "";
        })

        function saveButtonClicked() {
            $('#uploadTitle').hide();
            $('#confirmTitle').show();
            $('#uploadBody').hide();
            $('#confirmBody').show();
            $('#saveButton').hide();
            $('#cancelButton').hide();
            $('#yesButton').show();
            $('#noButton').show();
        }

        function uploadTemplate() {
            let f = document.getElementById('uploadFile');
            var input = document.querySelector('input[type="file"]')
            var formData = new FormData();
            const urlParams = new URLSearchParams(window.location.search);
            const reportIndex = parseInt(urlParams.get('report'));
            const reportType = reportIndex == 1 ? "Land Use Report" : reportIndex == 2 ? "Notice of Final Review" : "";
            formData.append('file', input.files[0]);
            formData.append('document_type', reportType);
            formData.append('active_flag', false);
            formData.append('template_name', $('#uploadTemplateName').val());
            fetch('/admin/upload-template', {
                method: 'POST',
                body: formData,
                responseType: 'application/json',
            })
            .then(res => res.json())
            .then(data => {
                if (data.errors) {
                    alert(data.errors);
                } else {
                    location.reload();
                }
            });
        }
  </script>
  <script>
    $("fieldset legend").click(function() {
        $(this).parent().find(".contents").toggle();
        if ($(".fa", this).hasClass("fa-plus")) {
            $(".fa", this).removeClass("fa-plus").addClass("fa-minus");
        } else {
            $(".fa", this).removeClass("fa-minus").addClass("fa-plus");
        }
    });
  </script>
  <script>
    function downloadTemplate(id) {
        $(":button").prop("disabled", true);
        const template_name = $(`#name-${id}`).val();
        fetch(`/admin/download-template/${id}`, {
            method: "GET",
        })
        .then((res) => res.blob())
        .then((blob) => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            a.style.display = "none";
            a.href = url;
            a.download = template_name + ".docx";
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            $(":button").prop("disabled", false);
        })
        .catch(() => {
            $(":button").prop("disabled", false);
            console.log("Error downloading the template");
        });
    }

    function removeTemplate() {
        const id = $("#document-template-id").val();
        const urlParams = new URLSearchParams(window.location.search);
        const reportIndex = parseInt(urlParams.get('report'));
        const reportType = reportIndex == 1 ? "Land Use Report" : reportIndex == 2 ? "Notice of Final Review" : "";
        fetch(`/admin/remove-template/${reportType}/${id}`, {
            method: "GET",
        })
        .then((res) => res.json())
        .then((resJson) => {
            $(`#row-${id}`).remove();
            $(`#radio-${resJson.id}`).prop('checked', true);
        })
        .catch(() => {
            console.log("Error removing the template");
        });
    }
  </script>
  {{/inline}}
{{/template}}