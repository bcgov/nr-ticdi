apiVersion: v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: nr-ticdi-tb"
    tags: "nr-ticdi-db"
    iconClass: icon-js
labels:
  app: ${NAME}
  app.kubernetes.io/part-of: "${NAME}"
parameters:
  - name: NAME
    description: Product name
    value: nr-ticdi-db
  - name: COMPONENT
    description: Component name
    value: database
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-### or prod
    required: true
  - name: NAMESPACE
    description: Namespace to deploy to
    value: c57b8f-dev
  - description: Password for the PostgreSQL connection user.
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: DB_PASSWORD
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Volume Capacity
    name: DB_PVC_SIZE
    required: true
    value: 1Gi
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}-${COMPONENT}
      labels:
        app: ${NAME}
    stringData:
      database-name: "${NAME}"
      database-password: "${DB_PASSWORD}"
      database-user: "${NAME}"
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}-${COMPONENT}
      labels:
        app: ${NAME}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${DB_PVC_SIZE}"
      storageClassName: netapp-file-standard
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${NAME}-${COMPONENT}
      labels:
        app: ${NAME}
    spec:
      lookupPolicy:
        local: false
      tags:
      - name: pr
        from:
          kind: DockerImage
          name: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:12
        referencePolicy:
          type: Local
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}-${COMPONENT}
      labels:
        app: ${NAME}
    spec:
      replicas: 1
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      revisionHistoryLimit: 10
      template:
        metadata:
          name: ${NAME}-${COMPONENT}
          labels:
            app: ${NAME}
        spec:
          volumes:
            - name: ${NAME}-${COMPONENT}
              persistentVolumeClaim:
                claimName: ${NAME}-${COMPONENT}
          containers:
            - name: ${NAME}-${COMPONENT}
              image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${NAME}-${COMPONENT}:pr
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${COMPONENT}
                      key: database-name
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${COMPONENT}
                      key: database-password
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${COMPONENT}
                      key: database-user
              volumeMounts:
                - name: ${NAME}-${COMPONENT}
                  mountPath: "/var/lib/pgsql/data"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 5432
                timeoutSeconds: 1
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - pg_isready -h localhost -p 5432
                initialDelaySeconds: 20
                timeoutSeconds: 15
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
