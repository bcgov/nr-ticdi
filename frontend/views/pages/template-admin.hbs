{{#> template}}
  {{#*inline "content"}}
    <main role="main">
        <div class="container">
            <h1>Template Administration</h1>
            <hr />
            <div class="form-group row">
                <div class="col-md-2">
                    <p class="font-weight-bold" style="font-size: larger">Document Type</p>
                </div>
                <div class="col-md-3">
                    <select id="documentTypeSelect" class="form-control">
                        {{#each documentTypes}}
                        <option value="{{this}}">{{this}}</option>
                        {{/each}}
                    </select>
                </div>
            </div>
            <div style="display: none">
                <table id="document_type">
                </table>
            </div>
            <div class="documentTableDiv" style="margin-bottom: 50px">
                <table id="documentTable">
                    <thead>
                        <tr>
                            <th>Code</th>
                            <th>Description</th>
                            <th>Created By</th>
                            <th>Created Date</th>
                            <th>Updated By</th>
                            <th>Updated Date</th>
                        </tr>
                    </thead>
                    <tbody id="documentTbody">
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-md-3">
                <p class="font-weight-bold" style="font-size: larger">Upload Template</p>
            </div>
            <form class="upload">
                <div class="form-group row">
                    <div class="col-md-4">
                        <input class="form-control-file" id="uploadFile" style="height: auto" type="file" accept=".docx">
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary">Upload</button>
                    </div>
                </div>
            </form>
        </div>
    </main>
    <script>
        var dataArray = [];
        $( document ).ready(function() {
            {{#each data}}
            dataArray.push({
                code: "{{this.document_type}}", // lur
                description: "{{this.comments}}", // Land Use Report
                who_created: "{{this.template_author}}",
                when_created: "{{this.template_creation_date}}",
                who_updated: "{{this.updated_by}}",
                when_updated: "{{this.updated_date}}",
            });
            {{/each}}
            var t = "";
            // fill the hidden table
            for (let entry of dataArray) {
                var tr = "<tr>";
                tr += "<td>"+entry.code+"</td>";
                tr += "<td>"+entry.description+"</td>";
                tr += "<td>"+entry.who_created+"</td>";
                tr += "<td>"+entry.when_created+"</td>";
                tr += "<td>"+entry.who_updated+"</td>";
                tr += "<td>"+entry.when_updated+"</td>";
                tr += "</tr>";
                t += tr;
            }
            $("#document_type tr").remove();
            table = $("#document_type");
            $("#document_type").innerHTML = t;

            // fill the displayed table with instances of the selected option
            const initialSelection = $("#documentTypeSelect option:selected").text();
            $("#documentTable tbody tr").remove();
            t = ""
            for (let entry of dataArray) {
                if (initialSelection == entry.description) {
                    var tr = "<tr>";
                    tr += "<td>"+entry.code+"</td>";
                    tr += "<td>"+entry.description+"</td>";
                    tr += "<td>"+entry.who_created+"</td>";
                    tr += "<td>"+entry.when_created+"</td>";
                    tr += "<td>"+entry.who_updated+"</td>";
                    tr += "<td>"+entry.when_updated+"</td>";
                    tr += "</tr>";
                    t += tr;
                }
            }
            document.getElementById("documentTbody").innerHTML = t;
        })
        // when the selected option changes, update the table
        $( "#documentTypeSelect" ).change(function () {
            $( "#documentTypeSelect option:selected" ).each(function() {
                $("#documentTable tbody tr").remove();
                var t = "";
                for (let entry of dataArray) {
                    if (entry.description == $(this).text()) {
                        var tr = "<tr>";
                        tr += "<td>"+entry.code+"</td>";
                        tr += "<td>"+entry.description+"</td>";
                        tr += "<td>"+entry.who_created+"</td>";
                        tr += "<td>"+entry.when_created+"</td>";
                        tr += "<td>"+entry.who_updated+"</td>";
                        tr += "<td>"+entry.when_updated+"</td>";
                        tr += "</tr>";
                        t += tr;
                    }
                }
                document.getElementById("documentTbody").innerHTML = t;            
            })
        })

        
    </script>
    <script>
        let fileBase64;
        const streamToText = async (blob) => {
            const readableStream = await blob.getReader();
            const chunk = await readableStream.read();

            return new TextDecoder('utf-8').decode(chunk.value);
        };

        const bufferToText = (buffer) => {
            const bufferByteLength = buffer.byteLength;
            const bufferUint8Array = new Uint8Array(buffer, 0, bufferByteLength);

            return new TextDecoder().decode(bufferUint8Array);
        };

        document.getElementById('uploadFile').addEventListener('change', function(e) {
            let file = document.getElementById('uploadFile').files[0];

            (async () => {
                const fileContent = await file.text();
                const fileContentStream = await file.stream();
                const buffer = await file.arrayBuffer();
                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function () {
                    fileBase64 = reader.result.split('base64,')[1];
                };
                reader.onerror = function (error) {
                    console.log("Error: ", error);
                };
            })();
        });
        const uploadForm = document.querySelector(".upload");
        uploadForm.addEventListener('submit', function(e) {
            e.preventDefault();
            let file = document.getElementById('uploadFile').files[0];
            const data = JSON.stringify({
                the_file: fileBase64,
                comments: 'Land Use Report',
                active_flag: true,
                template_version: '1',
                template_author: 'Mike',
                template_creation_date: new Date(),
                mime_type: 'no',
                file_name: 'landusereport',
                create_userid: '123'
            });
            fetch('/admin/upload-template', {
                method: 'POST',
                responseType: 'application/json',
                headers: {
                'Content-Type': 'application/json',
                },
                body: data,
            })
            .then(res => res.json())
            .then(data => {
                if (data.errors) {
                    alert(data.errors);
                } else {
                    location.reload();
                }
            });
        });
  </script>
  {{/inline}}
{{/template}}